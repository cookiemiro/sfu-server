name: Vue.js CI/CD with Nginx

on:
  push:
    branches: [ "main" ]  # main 브랜치 push 이벤트
  pull_request:
    types: 
      - closed  # PR이 close될 때

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest  # Ubuntu 환경에서 실행

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3  # 저장소 체크아웃

    - name: Setup Node.js
      uses: actions/setup-node@v4  # Node.js 설정 => version 4 사용
      with:
        node-version: '20'  # Node.js 버전 지정
        cache: 'npm'       # npm 캐시 사용
        cache-dependency-path: '**/package-lock.json'

    - name: Install dependencies
      run: | 
        npm install
        npm install @rollup/rollup-linux-x64-gnu

    - name: Create env file
      run: |
        echo "VITE_SERVER_URI=${{ secrets.API_URL }}" >> .env
        echo "VITE_WEBSOCKET_URI=${{ secrets.WEBSOCKET_URI }}" >> .env

    - name: Build Vue project
      run: npm run build   # Vue 프로젝트 빌드
      env: 
        NODE_ENV: production
        # Rollup 관련 환경 변수 설정
        ROLLUP_NATIVE_BUILD: false

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Add known hosts
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        chmod 700 ~/.ssh
        chmod 644 ~/.ssh/known_hosts

    # SSH 연결 테스트
    - name: Test SSH connection
      run: |
        ssh -v -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'echo "Connection test"'


    - name: Deploy to server
      run: |
        rsync -avz --delete ./dist/ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/root/sfu-server
        
    #- name: Restart Nginx
    #  run: |
    #    ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'sudo systemctl restart nginx'

    # Nginx 캐시 삭제
    - name: Clear Nginx cache
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} '
          sudo rm -rf /var/cache/nginx/* &&
          sudo systemctl restart nginx
        '
        
    # - name: Notify slack
    #   if: always()
    #   uses: 8398a7/action-slack@v3
    #   with:
    #     status: ${{ job.status }}
    #     fields: repo,message,commit,author,action,ref
    #   env:
    #     SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
